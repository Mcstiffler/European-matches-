import 'package:flutter/material.dart';
import 'package:webview_flutter/webview_flutter.dart';

void main() {
  runApp(SportsApp());
}

class SportsApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Sports Watch',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: MatchListScreen(),
    );
  }
}

class MatchListScreen extends StatelessWidget {
  final String mainWebsiteUrl = "https://www.example.com"; // Replace with your main website URL
  final List<Map<String, String>> matches = [
    {"title": "Football: Team A vs Team B", "url": "https://www.example.com/match1"},
    {"title": "Basketball: Team C vs Team D", "url": "https://www.example.com/match2"},
    {"title": "Tennis: Player X vs Player Y", "url": "https://www.example.com/match3"},
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Sports Watch'),
        actions: [
          IconButton(
            icon: Icon(Icons.web),
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => MatchWebViewScreen(url: mainWebsiteUrl),
                ),
              );
            },
          ),
        ],
      ),
      body: Column(
        children: [
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => MatchWebViewScreen(url: mainWebsiteUrl),
                  ),
                );
              },
              child: Text("Open Main Website"),
            ),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: matches.length,
              itemBuilder: (context, index) {
                return ListTile(
                  title: Text(matches[index]['title']!),
                  trailing: Icon(Icons.play_circle_outline),
                  onTap: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => MatchWebViewScreen(url: matches[index]['url']!),
                      ),
                    );
                  },
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}

class MatchWebViewScreen extends StatefulWidget {
  final String url;

  MatchWebViewScreen({required this.url});

  @override
  _MatchWebViewScreenState createState() => _MatchWebViewScreenState();
}

class _MatchWebViewScreenState extends State<MatchWebViewScreen> {
  bool isLoading = true;
  bool hasError = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Watch Match')),
      body: Stack(
        children: [
          WebView(
            initialUrl: widget.url,
            javascriptMode: JavascriptMode.unrestricted,
            onPageStarted: (_) {
              setState(() {
                isLoading = true;
                hasError = false;
              });
            },
            onPageFinished: (_) {
              setState(() {
                isLoading = false;
              });
            },
            onWebResourceError: (error) {
              setState(() {
                hasError = true;
                isLoading = false;
              });
            },
          ),
          if (isLoading)
            Center(child: CircularProgressIndicator()), // Loading indicator
          if (hasError)
            Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.error, color: Colors.red, size: 50),
                  SizedBox(height: 10),
                  Text(
                    'Failed to load the webpage.',
                    style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                  ),
                  SizedBox(height: 10),
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        isLoading = true;
                        hasError = false;
                      });
                    },
                    child: Text("Retry"),
                  ),
                ],
              ),
            ),
        ],
      ),
    );
  }
}
